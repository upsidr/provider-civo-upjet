/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CivoNetworkObservation struct {

	// If the network is default, this will be `true`
	Default *bool `json:"default,omitempty" tf:"default,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The name of the network
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type CivoNetworkParameters struct {

	// Name for the network
	// +kubebuilder:validation:Required
	Label *string `json:"label" tf:"label,omitempty"`

	// The region of the network
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

// CivoNetworkSpec defines the desired state of CivoNetwork
type CivoNetworkSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     CivoNetworkParameters `json:"forProvider"`
}

// CivoNetworkStatus defines the observed state of CivoNetwork.
type CivoNetworkStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CivoNetworkObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// CivoNetwork is the Schema for the CivoNetworks API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,civo}
type CivoNetwork struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              CivoNetworkSpec   `json:"spec"`
	Status            CivoNetworkStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CivoNetworkList contains a list of CivoNetworks
type CivoNetworkList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CivoNetwork `json:"items"`
}

// Repository type metadata.
var (
	CivoNetwork_Kind             = "CivoNetwork"
	CivoNetwork_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: CivoNetwork_Kind}.String()
	CivoNetwork_KindAPIVersion   = CivoNetwork_Kind + "." + CRDGroupVersion.String()
	CivoNetwork_GroupVersionKind = CRDGroupVersion.WithKind(CivoNetwork_Kind)
)

func init() {
	SchemeBuilder.Register(&CivoNetwork{}, &CivoNetworkList{})
}
